# Generated by Django 5.1.1 on 2025-06-03 12:26

import core.storage_backends
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonthlyBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(storage=core.storage_backends.R2Storage(), upload_to='boxes/')),
                ('month', models.IntegerField(editable=False)),
                ('year', models.IntegerField(editable=False)),
                ('day', models.IntegerField(editable=False)),
                ('rating', models.FloatField(default=0.0)),
                ('total_ratings', models.IntegerField(default=0)),
                ('rating_sum', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Dog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('boy', 'Boy'), ('girl', 'Girl')], max_length=10)),
                ('size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')], max_length=10)),
                ('primaryBreed', models.CharField(blank=True, max_length=100)),
                ('secondaryBreed', models.CharField(blank=True, max_length=100)),
                ('adoptionDate', models.CharField(blank=True, max_length=7)),
                ('allergies', models.JSONField(blank=True, default=list)),
                ('image', models.ImageField(blank=True, null=True, storage=core.storage_backends.R2Storage(), upload_to='dogs/')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dog', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_type', models.CharField(max_length=20)),
                ('selected_plan', models.CharField(choices=[('12mo', '12 Month'), ('6mo', '6 Month'), ('monthly', 'Monthly'), ('12mo-prepay', '12 Month Prepay'), ('6mo-prepay', '6 Month Prepay')], max_length=20)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=20)),
                ('rating', models.IntegerField(blank=True, default=0, null=True)),
                ('use_shipping_as_billing', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('out_for_delivery', 'Out for Delivery'), ('delivered', 'Delivered')], default='confirmed', max_length=20)),
                ('payment_method', models.CharField(default='Cash on Delivery', max_length=50)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('monthly_box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='main.monthlybox')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
